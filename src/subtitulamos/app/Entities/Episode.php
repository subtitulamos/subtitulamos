<?php

/**
 * This file is covered by the AGPLv3 license, which can be found at the LICENSE file in the root of this project.
 * @copyright 2021 subtitulamos.tv
 */

namespace App\Entities;

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity
 * @ORM\Table(name="episodes")
 */
class Episode
{
    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\ManyToOne(targetEntity="Show", inversedBy="episodes")
     * @ORM\JoinColumn(name="show_id", referencedColumnName="id", onDelete="CASCADE")
     */
    private $show;

    /**
     * @ORM\Column(type="integer")
     */
    private $season;

    /**
     * @ORM\Column(type="integer")
     */
    private $number;

    /**
     * @ORM\Column(type="string", length=100)
     */
    private $name;

    /**
     * @ORM\Column(type="integer")
     */
    private $downloads;

    /**
     * @ORM\OneToMany(targetEntity="Version", mappedBy="episode")
     */
    private $versions;

    /**
     * @ORM\OneToMany(targetEntity="EpisodeComment", mappedBy="episode")
     */
    private $comments;

    /**
     * @ORM\Column(type="datetime", name="creation_time", options={"default": "CURRENT_TIMESTAMP"})
     */
    private $creationTime;

    public function getFullName()
    {
        return $this->show->getName().' '.$this->season.'x'.\str_pad($this->number, 2, '0', STR_PAD_LEFT).' - '.$this->getName();
    }

    public function getNameAndSeason()
    {
        return $this->season.'x'.\str_pad($this->number, 2, '0', STR_PAD_LEFT).' - '.$this->getName();
    }

    /////////////////////////// AUTOGENERATED METHODS \\\\\\\\\\\\\\\\\\\\\

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->versions = new \Doctrine\Common\Collections\ArrayCollection();
        $this->comments = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set season
     *
     * @param integer $season
     *
     * @return Episode
     */
    public function setSeason($season)
    {
        $this->season = $season;

        return $this;
    }

    /**
     * Get season
     *
     * @return integer
     */
    public function getSeason()
    {
        return $this->season;
    }

    /**
     * Set number
     *
     * @param integer $number
     *
     * @return Episode
     */
    public function setNumber($number)
    {
        $this->number = $number;

        return $this;
    }

    /**
     * Get number
     *
     * @return integer
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Episode
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set downloads
     *
     * @param integer $downloads
     *
     * @return Episode
     */
    public function setDownloads($downloads)
    {
        $this->downloads = $downloads;

        return $this;
    }

    /**
     * Get downloads
     *
     * @return integer
     */
    public function getDownloads()
    {
        return $this->downloads;
    }

    /**
     * Set show
     *
     * @param \App\Entities\Show $show
     *
     * @return Episode
     */
    public function setShow(\App\Entities\Show $show = null)
    {
        $this->show = $show;

        return $this;
    }

    /**
     * Get show
     *
     * @return \App\Entities\Show
     */
    public function getShow()
    {
        return $this->show;
    }

    /**
     * Add version
     *
     * @param \App\Entities\Version $version
     *
     * @return Episode
     */
    public function addVersion(\App\Entities\Version $version)
    {
        $this->versions[] = $version;

        return $this;
    }

    /**
     * Remove version
     *
     * @param \App\Entities\Version $version
     */
    public function removeVersion(\App\Entities\Version $version)
    {
        $this->versions->removeElement($version);
    }

    /**
     * Get versions
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getVersions()
    {
        return $this->versions;
    }

    /**
     * Add comments
     *
     * @param \App\Entities\EpisodeComment $comments
     * @return Episode
     */
    public function addComment(\App\Entities\EpisodeComment $comments)
    {
        $this->comments[] = $comments;

        return $this;
    }

    /**
     * Remove comments
     *
     * @param \App\Entities\EpisodeComment $comments
     */
    public function removeComment(\App\Entities\EpisodeComment $comments)
    {
        $this->comments->removeElement($comments);
    }

    /**
     * Get comments
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getComments()
    {
        return $this->comments;
    }

    /**
     * Set creationTime
     *
     * @param \DateTime $creationTime
     *
     * @return Episode
     */
    public function setCreationTime($creationTime)
    {
        $this->creationTime = $creationTime;

        return $this;
    }

    /**
     * Get creationTime
     *
     * @return \DateTime
     */
    public function getCreationTime()
    {
        return $this->creationTime;
    }
}
